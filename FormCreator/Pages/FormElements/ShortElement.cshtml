@using FormCreator.Models
@model FormCreator.Pages.FormElements.FormDisplayElementModel
@switch (Model.Mode)
{
    case FormDisplayMode.Edit:
        <div class="bg-white rounded-1 border-1 border-secondary border d-flex flex-column p-3 m-1">
            <input asp-for="Element.QuestionType" name="Form.FormElements[@Model.Element.Index].QuestionType" type="hidden" />
            <input asp-for="Element.Index" name="Form.FormElements[@Model.Element.Index].Index" type="hidden" />
            <div class="d-flex flex-row align-items-center justify-content-between">
                <h5 class="text-center">Short text question</h5>
                <div class="d-flex flex-row align-items-center">
                    @if (Model.Element.Index != 0)
                    {
                        <a class="btn" asp-page-handler="MoveUp" asp-route-index="@Model.Element.Index">
                            <i class="bi bi-caret-up-fill text-black"></i>
                        </a>
                    }
                    @if (ViewData["fe_last"] != null && Model.Element.Index != (int)ViewData["fe_last"]!)
                    {
                        <a class="btn" asp-page-handler="MoveDown" asp-route-index="@Model.Element.Index">
                            <i class="bi bi-caret-down-fill text-black"></i>
                        </a>
                    }
                    <a class="btn btn-close" asp-page-handler="Remove" asp-route-index="@Model.Element.Index"></a>
                </div>
            </div>
            <div class="border-bottom flex-grow-1 border-dark"></div>
            <div class="form-group">
                <input asp-for="Element.Question" name="Form.FormElements[@Model.Element.Index].Question" class="form-control-plaintext mb-1 h4" />
                <span asp-validation-for="Element.Question" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input asp-for="Element.Answer" type="text" name="Form.FormElements[@Model.Element.Index].Answer" class="form-control" />
                <span asp-validation-for="Element.Answer" class="text-danger"></span>
            </div>
        </div>
        break;
    case FormDisplayMode.View:
        <div class="bg-white rounded-1 border-1 border-secondary border d-flex flex-column p-3 m-1">
            <input asp-for="Element.QuestionType" name="Submission.Submissions[@Model.Element.Index].QuestionType" type="hidden" />
            <input asp-for="Element.Index" name="Submission.Submissions[@Model.Element.Index].Index" type="hidden" />
            <div class="d-flex flex-row align-items-center justify-content-between">
                <h5 class="text-center">@Model.Element.Question</h5>
            </div>
            <div class="border-bottom flex-grow-1 border-dark mb-1"></div>
            <div class="form-group">
                <input type="text" name="Submission.Submissions[@Model.Element.Index].Answer" class="form-control" required />
                <span asp-validation-for="Element.Answer" class="text-danger"></span>
            </div>
        </div>
        break;
    case FormDisplayMode.Submission:
        if (Model.Submission == null)
        {
            <span class="text-danger">Cannot display submission</span>
        }
        else
        {
            <div class="bg-white rounded-1 border-1 border-secondary border d-flex flex-column p-3 m-1">
                <div class="d-flex flex-row align-items-center justify-content-between">
                    <h5 class="text-center">@Model.Element.Question</h5>
                </div>
                <div class="border-bottom flex-grow-1 border-dark mb-1"></div>
                <div class="form-group">
                    <span class="form-control w-auto">@Model.Submission.Answer</span>
                </div>
            </div>
        }
        break;
    default:
        <span class="text-danger">Cannot display form element</span>
        break;
}