@using FormCreator.Models
@model FormCreator.Pages.FormElements.FormDisplayElementModel
@switch(Model.Mode)
{
    case FormDisplayMode.Edit:
        <div class="bg-white rounded-1 border-1 border-secondary border d-flex flex-column p-3 m-1" id="muop-@Model.Element.Index">
            <input asp-for="Element.QuestionType" name="Form.FormElements[@Model.Element.Index].QuestionType" type="hidden" />
            <input asp-for="Element.Index" name="Form.FormElements[@Model.Element.Index].Index" type="hidden" />
            <div class="d-flex flex-row align-items-center justify-content-between">
                <h5 class="text-center">Single option choice</h5>
                <div class="d-flex flex-row align-items-center">
                    @if (Model.Element.Index != 0)
                    {
                        <a class="btn" asp-page-handler="MoveUp" asp-route-index="@Model.Element.Index">
                            <i class="bi bi-caret-up-fill text-black"></i>
                        </a>
                    }
                    @if (ViewData["fe_last"] != null && Model.Element.Index != (int)ViewData["fe_last"]!)
                    {
                        <a class="btn" asp-page-handler="MoveDown" asp-route-index="@Model.Element.Index">
                            <i class="bi bi-caret-down-fill text-black"></i>
                        </a>
                    }
                    <a class="btn btn-close" asp-page-handler="Remove" asp-route-index="@Model.Element.Index"></a>
                </div>
            </div>
            <div class="border-bottom flex-grow-1 border-dark"></div>

            <div class="form-group">
                <input asp-for="Element.Question" name="Form.FormElements[@Model.Element.Index].Question" class="form-control-plaintext mb-1 h4" />
                <span asp-validation-for="Element.Question" class="text-danger"></span>
            </div>
            <div class="form-group">
                <div id="radioButtons-@Model.Element.Index">
                    @for (int i = 0; i < Model.Element.Options.Count; i++)
                    {
                        int answer = (int)(Model.Element.Answer ?? 0);

                        <div class="d-flex flex-row align-items-center">
                            <input class="form-check-input align-self-middle" type="radio" name="Form.FormElements[@Model.Element.Index].Answer"
                            @(answer == i ? "checked" : "")
                                   value="@i" required>
                            <input type="text" asp-for="Element.Options[i]" name="Form.FormElements[@Model.Element.Index].Options[@i]" class="m-1 form-control w-auto flex-grow-1" />
                            <a class="btn btn-danger" asp-page-handler="RemoveSingle" asp-route-oindex="@Model.Element.Index" asp-route-iindex="@i">Remove</a>
                        </div>
                    }
                </div>
            </div>
            <div class="form-group">
                <a class="btn btn-primary" asp-page-handler="AddSingle" asp-route-index="@Model.Element.Index">Add Option</a>
            </div>
        </div>
        break;
    case FormDisplayMode.View:
        <div class="bg-white rounded-1 border-1 border-secondary border d-flex flex-column p-3 m-1" id="muop-@Model.Element.Index">
            <input asp-for="Element.QuestionType" name="Submission.Submissions[@Model.Element.Index].QuestionType" type="hidden" />
            <input asp-for="Element.Index" name="Submission.Submissions[@Model.Element.Index].Index" type="hidden" />
            <div class="d-flex flex-row align-items-center justify-content-between">
                <h5 class="text-center">@Model.Element.Question</h5>
            </div>
            <div class="border-bottom flex-grow-1 border-dark"></div>

            <div class="form-group">
                <div id="radioButtons-@Model.Element.Index">
                    @for (int i = 0; i < Model.Element.Options.Count; i++)
                    {
                        <div class="d-flex flex-row align-items-center">
                            <input class="form-check-input align-self-middle" type="radio" name="Submission.Submissions[@Model.Element.Index].Answer" value="@i" id="rb-@(Model.Element.Index)-@i" required>
                            <label class="m-1 form-control-plaintext w-auto flex-grow-1 user-select-none" for="rb-@(Model.Element.Index)-@i">@Model.Element.Options[i]</label>
                        </div>
                    }
                </div>
            </div>
        </div>
        break;
    case FormDisplayMode.Submission:
        if (Model.Submission == null)
        {
            <span class="text-danger">Cannot display submission</span>
        }
        else
        {
            <div class="bg-white rounded-1 border-1 border-secondary border d-flex flex-column p-3 m-1">
                <div class="d-flex flex-row align-items-center justify-content-between">
                    <h5 class="text-center">@Model.Element.Question</h5>
                </div>
                <div class="border-bottom flex-grow-1 border-dark mb-1"></div>
                <div class="form-group">
                    <div id="radioButtons-@Model.Element.Index">
                        @for (int i = 0; i < Model.Element.Options.Count; i++)
                        {
                            int answer = (int)(Model.Submission.Answer ?? 0);
                            <div class="d-flex flex-row align-items-center">
                                <input class="form-check-input align-self-middle"
                                type="radio" name="Submission.Submissions[@Model.Element.Index].Answer"
                                       value="@i" id="rb-@(Model.Element.Index)-@i" onclick="javascript: return false;" @(answer == i ? "checked" : "")>
                                <label class="m-1 form-control-plaintext w-auto flex-grow-1 user-select-none" for="rb-@(Model.Element.Index)-@i">@Model.Element.Options[i]</label>
                            </div>
                        }
                    </div>
                </div>
            </div>
        }
        break;
    default:
        <span class="text-danger">Cannot display form element</span>
        break;
}