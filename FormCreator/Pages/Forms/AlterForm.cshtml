@page "/forms/edit/{id}/{handler?}"
@model FormCreator.Pages.Forms.AlterFormModel
@using FormCreator.Pages.FormElements
@using FormCreator.Models
@{
    ViewData["Title"] = "New form";
}
@Html.EditorForModel()

@if (TempData["UserError"] != null)
{
    <div class="alert alert-danger alert-dismissible d-flex" role="alert">
        <span>@TempData["UserError"]</span>
        <span type="button" class="btn btn-close" data-bs-dismiss="alert" aria-label="Close"></span>
    </div>
}
@if (TempData["UserSuccess"] != null)
{
    <div class="alert alert-success alert-dismissible d-flex" role="alert">
        <span>@TempData["UserSuccess"]</span>
        <span type="button" class="btn btn-close" data-bs-dismiss="alert" aria-label="Close"></span>
    </div>
}
<div asp-validation-summary="ModelOnly" class="text-danger fw-bold"></div>
@if (Model.Form != null)
{
    <form method="post" id="mainForm">
        <input type="hidden" asp-for="Form.Id" readonly>
        <input type="hidden" asp-for="Form.OwnerId" readonly>
        <div class="container">
            <div class="d-flex justify-content-between m-1">
                <div class="d-flex align-items-center">
                    <a class="btn btn-sm btn-outline-secondary m-1" asp-page="/Forms/UserForms" asp-route-id="@User?.Identity?.Name">← Back to my forms</a>
                </div>
                <nav class="navbar navbar-expand-sm navbar-toggleable-sm navbar-light justify-content-end">
                    <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#subnavbar" aria-controls="navbarSupportedContent"
                            aria-expanded="false" aria-label="Toggle navigation">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    <div id="subnavbar" class="navbar-collapse collapse d-sm-inline-flex justify-content-end">
                        <ul class="navbar-nav flex-grow-1 align-items-center">
                            <li class="nav-item">
                                <div class="form-check form-switch m-1 align-items-center">
                                    <input id="flexSwitchCheckDefault" class="form-check-input" type="checkbox" role="switch" asp-for="Form.CanBeSearched">
                                    <label class="form-check-label user-select-none" for="flexSwitchCheckDefault">Form visibility</label>
                                </div>
                            </li>
                            <li class="nav-item">
                                <div class="dropdown">
                                    <a class="btn btn-outline-primary btn-sm dropdown-toggle" type="button" href="#" data-bs-toggle="dropdown" id="addFormElementDropdown" aria-expanded="false">
                                        Add Form Element
                                    </a>

                                    <ul class="dropdown-menu" aria-labelledby="addFormElementDropdown">
                                        <li><button type="button" class="dropdown-item add-form-element" onclick="dynamicPage('@Url.Page("/Forms/AlterForm","Add",new{type="ShortText"})',0)">Short Text</button></li>
                                        <li><button type="button" class="dropdown-item add-form-element" onclick="dynamicPage('@Url.Page("/Forms/AlterForm","Add",new{type="LongText"})',0)">Long Text</button></li>
                                        <li><button type="button" class="dropdown-item add-form-element" onclick="dynamicPage('@Url.Page("/Forms/AlterForm","Add",new{type="Date"})',0)">Date</button></li>
                                        <li><button type="button" class="dropdown-item add-form-element" onclick="dynamicPage('@Url.Page("/Forms/AlterForm","Add",new{type="Time"})',0)">Time</button></li>
                                        <li><button type="button" class="dropdown-item add-form-element" onclick="dynamicPage('@Url.Page("/Forms/AlterForm","Add",new{type="SingleOption"})',0)">Single Option</button></li>
                                        <li><button type="button" class="dropdown-item add-form-element" onclick="dynamicPage('@Url.Page("/Forms/AlterForm","Add",new{type="MultipleOptions"})',0)">Multiple Options</button></li>
                                        @*<li><a asp-page-handler="Add" asp-route-type="ShortText" class="dropdown-item add-form-element">Short Text</a><x/li>*@
                                    </ul>
                                </div>
                            </li>
                            <li class="nav-item">
                                <button type="button" class="btn btn-sm btn-outline-dark m-1" onclick="dynamicPage('@Url.Page("/Forms/AlterForm","Get",new{r="true"})',0)">Revert</button>
                                @*<a class="btn btn-sm btn-outline-dark m-1" asp-page-handler="Get" asp-route-r="true">Revert</a>*@
                            </li>
                            <li class="nav-item">
                                <button type="submit" class="btn btn-sm btn-success m-1">Save changes</button>
                            </li>
                        </ul>



                    </div>
                </nav>
            </div>
            <div class="card">
                <div class="card-header">
                    <input class="card-title form-control-plaintext p-0 h4 " asp-for="Form.Name" />
                </div>
                <input class="card-header bg-white fs-7 form-control-plaintext" type="text" asp-for="Form.Description" placeholder="Description" />
                <div class="card-body bg-light" id="formElementsContainer">
                    @if ((Model?.Form?.FormElements?.Count ?? 0) == 0)
                    {
                        <div class="container mt-3 mx-auto">
                            <div class="text-center fs-5 mx-auto">
                                No elements
                            </div>
                        </div>
                    }
                    @foreach (var formElement in Model?.Form?.FormElements)
                    {
                        ViewData["fe_last"] = Model.Form.FormElements.Count - 1;
                        var partialModel = new FormDisplayElementModel()
                    {
                        Mode = FormDisplayMode.Edit,
                        Element = formElement
                    };
                        switch (formElement.QuestionType)
                        {
                            case QuestionType.ShortText:
                                <partial name="/Pages/FormElements/ShortElement.cshtml" for="@partialModel" />
                                break;
                            case QuestionType.LongText:
                                <partial name="/Pages/FormElements/LongElement.cshtml" for="@partialModel" />
                                break;
                            case QuestionType.Date:
                                <partial name="/Pages/FormElements/DateElement.cshtml" for="@partialModel" />
                                break;
                            case QuestionType.Time:
                                <partial name="/Pages/FormElements/TimeElement.cshtml" for="@partialModel" />
                                break;
                            case QuestionType.SingleOption:
                                <partial name="/Pages/FormElements/SingleElement.cshtml" for="@partialModel" />
                                break;
                            case QuestionType.MultipleOptions:
                                <partial name="/Pages/FormElements/MultiElement.cshtml" for="@partialModel" />
                                break;
                        }
                    }
                </div>
            </div>
        </div>
    </form>
}